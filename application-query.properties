EodMain.Select.loadFilePath = SELECT RB36,STATEMENTFILE,LETTERS,GLFILE,MERCHANTGLFILE,AUTOSETTLEMENT,EODFILE,EXPOSUREFILE,MERCHANTSTATEMENTFILE, MERCHANTCUSTOMERSTATEMENTFILE,MERCHANTSTATEMENTSUMMARYFILE,OUTGOINGFILE, MERCHANTPAYMENTFILE,CASHBACK,BULKAPPLICATION, PRINTEDSTATEMENTREPORT,OUTGOINGIPMFILE,MASTERCARDABUFILE,EODDASHBOARDCONSOLELOG,OUTGOINGUPISTATEMENTFILE FROM COMMONFILEPATH WHERE OSTYPE = ?
EodMain.Select.loadTxnTypeConfigurations = SELECT ONLINETXNTYPE,TRANSACTIONCODE FROM TRANSACTIONTYPE

Common.Select.getProcessDetails = SELECT PROCESSID,DESCRIPTION,CRITICALSTATUS,ROLLBACKSTATUS,SHEDULEDATE,SHEDULETIME,FREQUENCYTYPE,CONTINUESFREQUENCYTYPE,CONTINUESFREQUENCY,MULTIPLECYCLESTATUS,PROCESSCATEGORYID,DEPENDANCYSTATUS,RUNNINGONMAIN,RUNNINGONSUB,PROCESSTYPE,STATUS,SHEDULEDATETIME,HOLIDAYACTION,KAFKATOPICNAME,KAFKAGROUPID FROM EODPROCESS WHERE PROCESSID = ?
Common.Insert.insertToEodProcessSumery = INSERT INTO EODPROCESSSUMMERY (EODID,PROCESSID,STARTTIME,STATUS,CREATEDTIME,LASTUPDATEDTIME,LASTUPDATEDUSER,SUCCESSCOUNT,FAILEDCOUNT,PROCESSPROGRESS) VALUES (?,?,SYSDATE,?,SYSDATE,SYSDATE,?,0,0,0)
Common.Update.eodProcessSummery = UPDATE EODPROCESSSUMMERY SET ENDTIME = SYSDATE , STATUS = ?,LASTUPDATEDTIME = SYSDATE,LASTUPDATEDUSER = ?,SUCCESSCOUNT = ?,FAILEDCOUNT = ?,PROCESSPROGRESS= ? WHERE EODID = ? AND PROCESSID = ?
Common.Select.getProcessDetails = SELECT PROCESSID,DESCRIPTION,CRITICALSTATUS,ROLLBACKSTATUS,SHEDULEDATE,SHEDULETIME,FREQUENCYTYPE,CONTINUESFREQUENCYTYPE,CONTINUESFREQUENCY,MULTIPLECYCLESTATUS,PROCESSCATEGORYID,DEPENDANCYSTATUS,RUNNINGONMAIN,RUNNINGONSUB, PROCESSTYPE,STATUS,SHEDULEDATETIME,HOLIDAYACTION, KAFKATOPICNAME, KAFKAGROUPID FROM EODPROCESS WHERE PROCESSID = ?
Common.Insert.insertToEODTransaction = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,MID,TID,TRANSACTIONAMOUNT, CURRENCYTYPE,CRDR,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONTYPE,BATCHNO, TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,TOACCOUNTNO,STATUS,TRANSACTIONDESCRIPTION,COUNTRYNUMCODE,ONOFFSTATUS,POSENTRYMODE,TRACEID,AUTHCODE,ACQADJUSTMENTFLAG,REQUESTFROM,SECOND_PARTY_PAN,FUELSURCHARGEAMOUNT,MCC,ORIGINALTRANSACTIONTYPE,CARDASSOCIATION) VALUES (?,?,?,?,?,?,?,?,TO_DATE(?,'DD-MM-YY'),TO_DATE(?,'DD-MM-YY'),?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Common.Insert.insertIntoEodMerchantTransaction = INSERT INTO EODMERCHANTTRANSACTION (AUTHCODE,BATCHNO,COUNTRYNUMCODE,CRDR,CREATEDTIME,CURRENCYTYPE,EODID,FOREXMARKUPAMOUNT,GLSTATUS,LASTUPDATEDTIME,LASTUPDATEDUSER,MID,ONOFFSTATUS,PAYMENTTYPE,POSENTRYMODE,RRN,SEQUENCENUMBER,SETTLEMENTDATE,STATUS,TID,TOACCOUNTNO,TRACEID,TRANSACTIONAMOUNT,TRANSACTIONDATE,TRANSACTIONDESCRIPTION,TRANSACTIONID,TRANSACTIONTYPE,MCC,BIN,CARDNUMBER,ADJUSTMENTFLAG,REQUESTFROM,FUELSURCHARGEAMOUNT,CARDASSOCIATION,CARDPRODUCT) VALUES(?,?,?,?,SYSDATE,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD-MM-YY'),?,?,?,?,?,?,?,?,?,?,?)
Common.Update.updateTransactionToEDON = UPDATE TRANSACTION SET EODSTATUS=? WHERE TXNID=? 
Common.Select.getNewCardNumber = SELECT CR1.NEWCARDNUMBER CARDNUMBER FROM CARDREPLACE CR1 LEFT JOIN CARDREPLACE CR2 ON CR2.OLDCARDNUMBER = CR1.NEWCARDNUMBER INNER JOIN CARD C ON C.CARDNUMBER = CR1.NEWCARDNUMBER WHERE C.CARDSTATUS NOT IN (?,?) START WITH CR1.OLDCARDNUMBER = ? CONNECT BY PRIOR CR1.NEWCARDNUMBER = CR1.OLDCARDNUMBER 
Common.Update.updateCardOtb = UPDATE ECMS_ONLINE_CARD SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ?,TEMPCREDITAMOUNT = TEMPCREDITAMOUNT + ?,TEMPCASHAMOUNT = TEMPCASHAMOUNT + ?,LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE WHERE CARDNUMBER=?  
Common.Update.updateAccountOtb = UPDATE ECMS_ONLINE_ACCOUNT SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ? WHERE ACCOUNTNUMBER=?  
Common.Update.updateCustomerOtb = UPDATE ECMS_ONLINE_CUSTOMER SET OTBCREDIT= OTBCREDIT - ?,OTBCASH= OTBCASH - ? WHERE CUSTOMERID = ?  

Common.Select.getMainCardNumber = SELECT MAINCARDNO FROM CARD WHERE CARDNUMBER =?

Initial.Update.swapEodCardBalance =UPDATE EODCARDBALANCE SET EODSTARTINGBAL = EODCLOSINGBAL
Initial.Update.insertIntoAccountBalance = UPDATE CARDACCOUNT SET OPENINGOTBCREDIT = OTBCREDIT 
Initial.Update.setResetCapsLimit = UPDATE tableName SET PINCOUNT= CASE  WHEN STATUS != ? THEN ?  ELSE PINCOUNT END,  TXNCOUNT = ?, TOTALTXNAMOUNT = ?, CASHTXNCOUNT = ?, TOTALCASHTXNAMOUNT = ?
Initial.Update.setResetCapsLimitAccount = UPDATE tableName SET TXNCOUNT = ?, TOTALTXNAMOUNT = ?, CASHTXNCOUNT = ?, TOTALCASHTXNAMOUNT = ?

EodParamReset.Update.resetMerchantParameters = UPDATE ECMS_ONLINE_MERCHANT SET TXNCOUNT= ? , CASHTXNCOUNT = ? , TOTALTXNAMOUNT=? , TOTALCASHTXNAMOUNT=?, LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE
EodParamReset.Update.resetTerminalParameters = UPDATE ECMS_ONLINE_TERMINAL SET TXNCOUNT= ? , CASHTXNCOUNT = ? , TOTALTXNAMOUNT=? , TOTALCASHTXNAMOUNT=?, LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE

CardReplace.Select.getCardListToReplace = SELECT CR.NEWCARDNUMBER,CR.OLDCARDNUMBER FROM CARDREPLACE CR,CARD CA WHERE CA.CARDSTATUS = ? AND CA.CARDNUMBER = CR.NEWCARDNUMBER AND  CR.STATUS = ? AND TRUNC(CR.REPLACEDATE) <= TO_DATE(?,'DD-MM-YY')
CardReplace.Update.updateCardReplaceStatus = UPDATE CARDREPLACE SET PINGENERATIONSTATUS = ?, LETTERGENERATIONSTATUS=?, STATUS = ? WHERE NEWCARDNUMBER = ?

AcqTxnUpdate.Select.getAllSettledTxnFromTxn = SELECT TXNID,NVL(ONOFFSTSTUS,1) AS ONOFFSTSTUS,CARDNO,TXNCURRENCY,CB_SEQ_NO, NVL((TXNAMOUNT)/100,0) AS TRANSACTIONAMOUNT,NVL(NVL((BILLINGAMOUNT),0)/100,0) AS BILLINGAMOUNT,BATCHNO,TID,MID,MCC,COUNTRYCODE,TRACENO,RRN,AUTHCODE,POSENTRYMODE, CAIC,BACKENDTXNTYPE,TOACCOUNT,CREATETIME,REQUESTFROM,SECOND_PARTY_PAN,SETTLEMENTDATE,CHANNELTYPE,LISTENERTYPE FROM TRANSACTION WHERE ACQORISS = ? AND RESPONSECODE = ?  AND EODSTATUS = ?  AND STATUS IN (?,?)  AND TRUNC(CREATETIME) <= TRUNC(TO_DATE(?))  AND BACKENDTXNTYPE NOT IN(?,?) AND EODCONSIDERSTATUS = ? 
AcqTxnUpdate.Select.getForexPercentage = SELECT NVL(VISATXNTOLLERANCERATE,0) AS VISATXNTOLLERANCERATE FROM COMMONPARAMETER
AcqTxnUpdate.Select.getFuelSurchargeRatePercentage = SELECT NVL(FUELSURCHARGERATE ,0) AS FUELSURCHARGERATE FROM COMMONPARAMETER
AcqTxnUpdate.Select.getFuelMccList = SELECT FUELMCCLIST AS FUELMCCLIST  FROM COMMONPARAMETER
AcqTxnUpdate.Select.getFinancialStatus = SELECT TRANSACTIONCODE,FINANCIALSTATUS FROM TRANSACTIONTYPE

PaymentReversal.Select.getPaymentReversals = SELECT * FROM PAYMENT WHERE TRANSACTIONTYPE in(?) AND EODID=? and STATUS=?
PaymentReversal.Update.insertPaymentsForCashReversals = UPDATE PAYMENT SET STATUS=? WHERE SEQUENCENUMBER=? AND CARDNUMBER=? AND EODID=?
PaymentReversal.Update.updatePaymentsForCashReversals = UPDATE PAYMENT SET STATUS=? WHERE TRACEID=? AND CARDNUMBER=? AND TRANSACTIONTYPE=? AND EODID=?

TxnMismatchPost.Select.getInitEodTxnMismatchPostCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM EODTRANSACTION ET INNER JOIN CARD C ON C.CARDNUMBER = ET.CARDNUMBER INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO LEFT OUTER JOIN TRANSACTION T ON T.TXNID = ET.TRANSACTIONID WHERE ET.STATUS = ? AND ET.EODID = ?  AND ET.ONLYVISAFALSE NOT IN(?) AND ((ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?))  AND CAC.ACCOUNTNO not in  (select ec.ACCOUNTNO from eoderrorcards ec where ec.status= ? ) GROUP BY CAC.CUSTOMERID, CAC.ACCOUNTNO  HAVING SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) != 0 ORDER BY CAC.CUSTOMERID, CAC.ACCOUNTNO
TxnMismatchPost.Select.getErrorEodTxnMismatchPostCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM EODTRANSACTION ET INNER JOIN CARD C ON C.CARDNUMBER = ET.CARDNUMBER INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO INNER JOIN EODERRORCARDS EEC ON EEC.ACCOUNTNO = CAC.ACCOUNTNO LEFT OUTER JOIN TRANSACTION T ON T.TXNID = ET.TRANSACTIONID WHERE ET.STATUS = ? AND ET.EODID = ? AND ET.ONLYVISAFALSE NOT IN(?) AND EEC.PROCESSSTEPID <= ? AND ((ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?)) AND EEC.STATUS = ? AND EEC.EODID < ? GROUP BY CAC.CUSTOMERID, CAC.ACCOUNTNO HAVING SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) != 0 ORDER BY CAC.CUSTOMERID, CAC.ACCOUNTNO
TxnMismatchPost.Select.getInitTxnMismatch = SELECT ET.CARDNUMBER, TT.TRANSACTIONCODE, TT.DESCRIPTION,ET.CRDR, (CASE WHEN ET.CRDR='CR' THEN -1*SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) ELSE SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) END) AS TXNMISMATCHAMOUNT  FROM EODTRANSACTION ET LEFT JOIN TRANSACTION T ON T.TXNID = ET.TRANSACTIONID INNER JOIN TRANSACTIONTYPE TT ON TT.TRANSACTIONCODE = ET.TRANSACTIONTYPE WHERE ET.STATUS = ? AND ET.EODID = ? AND ET.ONLYVISAFALSE NOT IN(?) AND ((ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?)) AND ET.ACCOUNTNO = ? GROUP BY ET.CARDNUMBER, TT.TRANSACTIONCODE, TT.DESCRIPTION, ET.CRDR HAVING SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) != 0

Adjustment.Select.getAdjustmentList = SELECT A.ID, A.TRACENO, T.TXNID AS TXNID, A.UNIQUEID, A.AMOUNT, A.CRDR, A.ADJUSTDATE, A.ADJUSTMENTTYPE, NVL(A.REMARKS,'ADJUSTMENT') AS REMARK, A.TRANSACTIONTYPE, C.ACCOUNTNO, NVL(A.CURRENCYTYPE,144) AS CURRENCYTYPE FROM ADJUSTMENT A, CARDACCOUNTCUSTOMER C, TRANSACTION T WHERE A.STATUS = ? AND T.TRACENO = A.TRACENO AND T.CARDNO = A.UNIQUEID AND T.BACKENDTXNTYPE IN(?,?) AND T.EODSTATUS NOT IN(?) AND A.ADJUSTMENTTYPE NOT IN(?,?) AND A.EODSTATUS NOT IN(?,?) AND TO_DATE(A.ADJUSTDATE, 'DD-MM-YY')<= TO_DATE(?, 'DD-MM-YY') AND C.CARDNUMBER =A.UNIQUEID
Adjustment.Insert.insertToEODPayments = INSERT INTO EODPAYMENT(SEQUENCENUMBER,EODID,CARDNUMBER,MAINCARDNO,ISPRIMARY,AMOUNT,PAYMENTTYPE,TRACEID,FORWARDAMOUNT,STATUS,CREATEDTIME,LASTUPDATEDUSER,LASTUPDATEDDATE)VALUES(?,?,?,?,?,?,?,?,?,?,SYSDATE,?,SYSDATE)
Adjustment.Select.getCardAssociationFromCardBin = SELECT CAC.CARDASSOCIATION AS CARDASSOCIATION FROM CARDASSOCIATIONCHANNEL CAC INNER JOIN CARDBIN CB ON CAC.CHANNELID=CB.CHANNELID WHERE CB.BIN=?
Adjustment.Insert.insertInToEODTransaction.AdTypeNotNull = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,TRANSACTIONAMOUNT,CURRENCYTYPE,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONTYPE,TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,STATUS,TRANSACTIONDESCRIPTION,CRDR,CARDASSOCIATION,ADJUSTMENTSTATUS,ONLYVISAFALSE) VALUES (?,?,?,?,?,TO_DATE(?, 'DD-MM-YY'),TO_DATE(?, 'DD-MM-YY'),?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?)
Adjustment.Insert.insertInToEODTransaction.AdTypeNull = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,TRANSACTIONAMOUNT,CURRENCYTYPE,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONTYPE,TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,STATUS,TRANSACTIONDESCRIPTION,CRDR,CARDASSOCIATION) VALUES (?,?,?,?,?,TO_DATE(?, 'DD-MM-YY'),TO_DATE(?, 'DD-MM-YY'),?,?,?,SYSDATE,SYSDATE,?,?,?,?)
Adjustment.Update.updateAdjustmentStatus = UPDATE ADJUSTMENT SET EODSTATUS = ? WHERE ID = ?
Adjustment.Update.updateTransactionToEDON = UPDATE TRANSACTION SET EODSTATUS=? WHERE TXNID=?

CardFee.Select.getCardFeeCountList = SELECT CF.CARDNUMBER,CD.NEXTANNIVERSARYDATE,CF.CASHAMOUNT,CD.CREDITLIMIT, CD.OTBCREDIT,CC.ACCOUNTNO,CA.STATUS,CF.FEECODE,CF.FEECOUNT,FF.CURRENCYCODE,FF.CRORDR,FF.FLATFEE,FF.MINIMUMAMOUNT,FF.MAXIMUMAMOUNT, FF.PERSENTAGE, FF.COMBINATION FROM CARDFEECOUNT CF,CARD CD,FEEPROFILEFEE FF,CARDACCOUNTCUSTOMER CC,CARDACCOUNT CA WHERE CF.CARDNUMBER = CD.CARDNUMBER AND CF.CARDNUMBER = CC.CARDNUMBER AND CD.FEEPROFILECODE = FF.FEEPROFILECODE AND CF.FEECODE = FF.FEECODE AND CA.ACCOUNTNO = CC.ACCOUNTNO AND CD.CARDSTATUS not in(?) and CF.STATUS in(?,?) and CF.FEECOUNT<>0 AND TO_DATE(CF.CREATEDDATE,'DD-MM-YY') <= TO_DATE(?,'DD-MM-YY')
CardFee.Select.getCardFeeCountForCard = SELECT CF.CARDNUMBER,CD.NEXTANNIVERSARYDATE,CF.CASHAMOUNT,CD.CREDITLIMIT,CD.NEXTANNIVERSARYDATE  AS NEXTANN, CD.OTBCREDIT,CC.ACCOUNTNO,CA.STATUS,CF.FEECODE,CF.FEECOUNT,FF.CURRENCYCODE,FF.CRORDR,FF.FLATFEE,FF.MINIMUMAMOUNT,FF.MAXIMUMAMOUNT,ff.persentage, FF.COMBINATION FROM CARDFEECOUNT CF,CARD CD,FEEPROFILEFEE FF,CARDACCOUNTCUSTOMER CC,CARDACCOUNT CA WHERE CF.CARDNUMBER = CD.CARDNUMBER AND CF.CARDNUMBER = CC.CARDNUMBER AND CD.FEEPROFILECODE = FF.FEEPROFILECODE AND CF.FEECODE = FF.FEECODE AND CA.ACCOUNTNO = CC.ACCOUNTNO  and  cf.cardnumber=? AND CC.ACCOUNTNO = ? and cf.feecode= ? AND CD.CARDSTATUS <> ?
CardFee.Select.getNextBillingDateForCard = SELECT NEXTBILLINGDATE FROM CARDACCOUNT WHERE CARDNUMBER = (SELECT MAINCARDNO FROM CARD WHERE CARDNUMBER =?)
CardFee.Insert.insertToEODCardFee = INSERT INTO EODCARDFEE(EODID,CARDNUMBER,ACCOUNTNO,CRDR,FEEAMOUNT,CURRENCYTYPE,EFFECTDATE,FEETYPE,LASTUPDATEDUSER,STATUS,TRANSACTIONID) VALUES (?,?,?,?,?,?,?,?,?,?,?)
CardFee.Update.updateCardFeeCount = UPDATE CARDFEECOUNT SET FEECOUNT = 0, CASHAMOUNT=0, STATUS=? WHERE CARDNUMBER = ? AND FEECODE = ?
CardFee.Update.updateDELINQUENTACCOUNTNpDetails = UPDATE DELINQUENTACCOUNT SET NPACCRUEDINTEREST = NPACCRUEDINTEREST + ?, NPACCRUEDOVERLIMITFEES = NPACCRUEDOVERLIMITFEES + ?, NPACCRUEDLATEPAYFEES = NPACCRUEDLATEPAYFEES + ?, NPACCRUEDFEES = NPACCRUEDFEES + ? WHERE ACCOUNTNO = ?

//Card Expire Process
CardExpire.Select.getCardExpireList = SELECT CARDNUMBER, NEWEXPIRYDATE, CARDSTATUS, EXPIERYDATE FROM CARD WHERE LAST_DAY(TO_DATE(EXPIERYDATE, 'yymm')) < ? AND CARDSTATUS NOT IN ( ?, ?, ?, ? )
CardExpire.Update.setCardStatusToExpire = UPDATE CARD SET CARDSTATUS = ?, LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE CARDNUMBER = ?
CardExpire.Update.setOnlineCardStatusToExpire = UPDATE ECMS_ONLINE_CARD SET STATUS = ?, LASTUPDATEUSER = ?, LASTUPDATETIME = SYSDATE WHERE CARDNUMBER = ?
CardExpire.Insert.insertToCardBlock = INSERT INTO CARDBLOCK ( CARDNUMBER, OLDSTATUS, NEWSTATUS, BLOCKREASON, LASTUPDATEDUSER, LASTUPDATEDTIME, CREATEDTIME, STATUS, CREATEDUSER, LASTEODUPDATEDDATE ) VALUES (?,?,?,?,?,SYSDATE,SYSDATE,?,?,?)

//Daily Interest Calculation Process
CardInterestCalculation.Select.getLatestStatementAccountList = SELECT BS.ACCOUNTNO, BS.MAINCARDNO, BS.CARDNO, BS.STATEMENTSTARTDATE, " + " BS.STATEMENTENDDATE, BS.THISBILLOPERNINGBALANCE, BS.THISBILLCLOSINGBALANCE, BS.DUEDATE, BS.STARTEODID, BS.ENDEODID " + " FROM BILLINGLASTSTATEMENTSUMMARY BLS INNER JOIN " + " BILLINGSTATEMENT BS ON BLS.STATEMENTID=BS.STATEMENTID " + " INNER JOIN CARD C ON BS.CARDNO=C.CARDNUMBER WHERE C.CARDSTATUS NOT IN(?)
CardInterestCalculation.Select.getIntProf = SELECT IP.INTERESTRATE, IP.INTERESTPERIODVALUE FROM CARDACCOUNT CA INNER JOIN INTERESTPROFILE IP ON IP.INTERESTPROFILECODE = CA.INTERESTPROFILECODE WHERE CA.ACCOUNTNO= ?
CardInterestCalculation.Select.getTxnOrPaymentDetailByAccount = SELECT ET.ACCOUNTNO AS ACCOUNTNO, SUM(ET.TRANSACTIONAMOUNT) AS TOTALPAY, (TRUNC(?)-TRUNC(ET.SETTLEMENTDATE)) AS DATEDIFF, SETTLEMENTDATE AS TRANDATE FROM EODTRANSACTION ET  INNER JOIN CARDACCOUNT CA ON CA.ACCOUNTNO = ET.ACCOUNTNO  INNER JOIN INTERESTPROFILETRANSACTION IPT ON CA.INTERESTPROFILECODE = IPT.INTERESTPROFILE AND IPT.TRANSACTIONCODE = ET.TRANSACTIONTYPE WHERE ET.ACCOUNTNO = ? AND ET.TRANSACTIONTYPE IN (?,?,?,?) AND ET.EODID > ? AND ET.EODID <= ? AND ET.TRANSACTIONID NOT IN(SELECT TXNID FROM EASYPAYMENTREQUEST WHERE STATUS IN(?,?)) GROUP BY ET.ACCOUNTNO, ET.SETTLEMENTDATE UNION ALL SELECT ET.ACCOUNTNO AS ACCOUNTNO, SUM(ET.TRANSACTIONAMOUNT) AS TOTALPAY, (TRUNC(?)-TRUNC(ET.SETTLEMENTDATE)) AS DATEDIFF, SETTLEMENTDATE AS TRANDATE FROM EODTRANSACTION ET INNER JOIN CARDACCOUNT CA ON CA.ACCOUNTNO = ET.ACCOUNTNO INNER JOIN INTERESTPROFILETRANSACTION IPT ON CA.INTERESTPROFILECODE = IPT.INTERESTPROFILE AND IPT.TRANSACTIONCODE = ET.TRANSACTIONTYPE WHERE ET.ACCOUNTNO = ? AND ET.TRANSACTIONTYPE IN (?) AND ET.EODID > ? AND ET.EODID <= ? GROUP BY ET.ACCOUNTNO, ET.SETTLEMENTDATE UNION ALL SELECT ACCOUNTNO AS ACCOUNTNO,SUM(FEEAMOUNT) AS TOTALPAY,(TRUNC(?)-TRUNC(EFFECTDATE)) AS DATEDIFF,TRUNC(EFFECTDATE) AS TRANDATE FROM EODCARDFEE WHERE ACCOUNTNO= ? AND EODID > ? AND EODID <= ? GROUP BY ACCOUNTNO, TRUNC(EFFECTDATE) UNION ALL SELECT ET.ACCOUNTNO AS ACCOUNTNO, -SUM(ET.TRANSACTIONAMOUNT) AS TOTALPAY, (TRUNC(?)-TRUNC(ET.SETTLEMENTDATE)) AS DATEDIFF, SETTLEMENTDATE AS TRANDATE FROM EODTRANSACTION ET WHERE ET.ACCOUNTNO = ? AND ET.TRANSACTIONTYPE IN (?) AND ET.EODID > ? AND ET.EODID <= ? GROUP BY ET.ACCOUNTNO, ET.SETTLEMENTDATE UNION ALL SELECT ? AS ACCOUNTNO, ? AS TOTALPAY ,TRUNC(?)-TRUNC(?) AS DATEDIFF, ? AS TRANDATE FROM DUAL UNION ALL  SELECT ? AS ACCOUNTNO,INTERESTAMOUNT AS TOTALPAY ,TRUNC(?)-TRUNC(?) AS DATEDIFF,  ? AS TRANDATE FROM EOMINTEREST WHERE ACCOUNTNO=?  AND EODID=? ORDER BY TRANDATE
CardInterestCalculation.Select.updateEodInterest_Select = SELECT COUNT(*) AS RECORD FROM EODINTEREST WHERE ACCOUNTNO = ?
CardInterestCalculation.Update.updateEodInterest_Update = UPDATE EODINTEREST SET FORWARDAMOUNT = ?, CURRENTINTEREST = ?, ACTUALINTEREST = ?, INTERESTRATE = ?, LASTUPDATEDTIME=SYSDATE, LASTUPDATEDUSER=?, DUEDATE =? WHERE ACCOUNTNO = ?
CardInterestCalculation.Insert.updateEodInterest_UpdateINSERT INTO EODINTEREST (CARDNO,EODID,FORWARDAMOUNT,CURRENTINTEREST,CREATEDTIME,LASTUPDATEDTIME,LASTUPDATEDUSER,ACTUALINTEREST,INTERESTRATE,DUEDATE,ACCOUNTNO) VALUES (?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?)

//Card Limit Enhancement Process
CardLimitEnhancement.Select.getInitLimitEnhanceCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM  TEMPLIMITINCREMENT TI INNER JOIN CARD  C ON C.CARDNUMBER = TI.CARDNO INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = TI.CARDNO WHERE TI.STATUS = ?  AND TI.STARTDATE <= ? AND CAC.ACCOUNTNO NOT IN (SELECT EC.ACCOUNTNO  FROM  EODERRORCARDS EC WHERE EC.STATUS = ? ) ORDER BY CAC.CUSTOMERID, CAC.ACCOUNTNO
CardLimitEnhancement.Select.getErrorLimitEnhanceCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM  TEMPLIMITINCREMENT TI INNER JOIN CARD  C ON C.CARDNUMBER = TI.CARDNO INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO  INNER JOIN EODERRORCARDS EEC ON EEC.ACCOUNTNO = CAC.ACCOUNTNO  WHERE TI.STATUS = ?  AND TI.STARTDATE <= ? AND EEC.STATUS = ? AND EEC.EODID < ? AND EEC.PROCESSSTEPID <= ?  ORDER BY  CAC.CUSTOMERID, CAC.ACCOUNTNO
CardLimitEnhancement.Select.getLimitEnhanceReqConCardList = SELECT TI.CARDNO, TI.AMOUNT, TI.INCREMENTTYPE, TI.INCORDEC, TI.REQUESTID, C.CARDCATEGORYCODE, TI.STARTDATE, TI.ENDDATE FROM TEMPLIMITINCREMENT TI INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = TI.CARDNO INNER JOIN CARD C ON C.CARDNUMBER = CAC.CARDNUMBER WHERE TI.STATUS = ? AND TI.STARTDATE <= ? AND CAC.CUSTOMERID = ? AND CAC.ACCOUNTNO = ?
CardLimitEnhancement.Update.updateCardCreditLimit = UPDATE CARD SET OTBCREDIT = OTBCREDIT + ? , LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE CARDNUMBER = ?
CardLimitEnhancement.Update.updateOnlineCardCreditLimit = UPDATE ECMS_ONLINE_CARD SET OTBCREDIT = OTBCREDIT + ?, LASTUPDATEUSER = ?, LASTUPDATETIME = SYSDATE WHERE CARDNUMBER=?
CardLimitEnhancement.Update.updateAccountCreditLimit = UPDATE CARDACCOUNT SET OTBCREDIT = OTBCREDIT + ? , LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE ACCOUNTNO = ?
CardLimitEnhancement.Update.updateOnlineAccountCreditLimit = UPDATE ECMS_ONLINE_ACCOUNT SET OTBCREDIT = OTBCREDIT + ? WHERE ACCOUNTNUMBER=?
CardLimitEnhancement.Update.updateCustomerCreditLimit = UPDATE CARDCUSTOMER SET OTBCREDIT = OTBCREDIT + ? , LASTUPDATEDUSER=?, LASTUPDATEDTIME=SYSDATE WHERE CUSTOMERID = ?
CardLimitEnhancement.Update.updateOnlineCustomerCreditLimit = UPDATE ECMS_ONLINE_CUSTOMER SET OTBCREDIT=OTBCREDIT + ? WHERE CUSTOMERID=?
CardLimitEnhancement.Update.updateCardCashLimit = UPDATE CARD SET OTBCASH = OTBCASH + ? , LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE CARDNUMBER = ?
CardLimitEnhancement.Update.updateOnlineCardCashLimit = UPDATE ECMS_ONLINE_CARD SET OTBCASH = OTBCASH + ?, LASTUPDATEUSER = ?, LASTUPDATETIME = SYSDATE WHERE CARDNUMBER=?
CardLimitEnhancement.Update.updateAccountCashLimit = UPDATE CARDACCOUNT SET OTBCASH = OTBCASH + ? , LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE ACCOUNTNO = ?
CardLimitEnhancement.Update.updateOnlineAccountCashLimit = UPDATE ECMS_ONLINE_ACCOUNT SET OTBCASH = OTBCASH + ? WHERE ACCOUNTNUMBER=?
CardLimitEnhancement.Update.updateCustomerCashLimit = UPDATE CARDCUSTOMER SET OTBCASH = OTBCASH + ? , LASTUPDATEDUSER=?, LASTUPDATEDTIME=SYSDATE WHERE CUSTOMERID = ?
CardLimitEnhancement.Update.updateOnlineCustomerCashLimit = UPDATE ECMS_ONLINE_CUSTOMER SET OTBCASH=OTBCASH + ? WHERE CUSTOMERID=?
CardLimitEnhancement.Update.updateTempLimitIncrementTable = UPDATE TEMPLIMITINCREMENT SET STATUS =?, EFFECTIVESTARTDATE= SYSDATE, LASTUPDATEDUSER= ?, LASTUPDATEDTIME= SYSDATE,LASTEODUPDATEDDATE=? WHERE CARDNO = ? AND REQUESTID=?

//Card Renew Process
CardRenew.Select.getCardValidityPeriod = SELECT VALIDITYPERIOD FROM CARDPRODUCT WHERE PRODUCTCODE = (SELECT CARDPRODUCT FROM CARD WHERE CARD.CARDNUMBER = ?
CardRenew.Update.updateCardTable = UPDATE CARD SET NEWEXPIRYDATE = ?,EXPIERYDATEMONTH=?,EXPIERYDATEYEAR=? WHERE CARDNUMBER = ?
CardRenew.Update.updateCardTable_2 = UPDATE CARD SET NEWEXPIRYDATE = ?,EMBOSSSTATUS = ?,EXPIERYDATEMONTH=?,EXPIERYDATEYEAR=? WHERE CARDNUMBER = ?
CardRenew.Update.updateCardRenewTable = UPDATE CARDRENEW SET STATUS = ?,LASTEODUPDATEDDATE=? WHERE CARDNUMBER = ?
CardRenew.Update.updateOnlineCardTable = UPDATE ECMS_ONLINE_CARD SET NEWEXPDATE =? WHERE CARDNUMBER =?
CardRenew.Select.getApprovedCardList = SELECT CR.CARDNUMBER AS CARDNUMBER ,CR.EARLYRENEW AS EARLYRENEW,CR.EXPIRYDATE AS EXPIRYDATE, CR.ISREPLACERENEWAL AS ISREPLACERENEWAL, CD.CARDSTATUS  AS CARDSTATUS FROM CARDRENEW CR, CARD CD WHERE CD.cardnumber=CR.cardnumber AND CR.STATUS   =?
CardRenew.Select.isProcessCompletlyFail = SELECT ISPROCESSFAIL FROM EODERRORCARDS WHERE  ERRORPROCESSID = ? and STATUS = ?

//Cash Back Alert Process
CashBackAlert.Select.getConfirmedAccountToAlert = SELECT BS.CARDNO, BS.ACCOUNTNO, BS.STATEMENTID, CB.ID AS REQID, CB.ACCOUNTNUMBER, CB.CASHBACKAMOUNT, BLS.MINAMOUNT FROM BILLINGSTATEMENT BS INNER JOIN BILLINGLASTSTATEMENTSUMMARY BLS ON BS.STATEMENTID = BLS.STATEMENTID LEFT JOIN CASHBACK CB ON BS.ACCOUNTNO = CB.ACCOUNTNUMBER AND BS.ENDEODID = EODID WHERE BS.NOTIFICATIONFLAG = ?
CashBackAlert.Update.updateCashBackAlertGenStatus = UPDATE CASHBACK CB SET CB.NOTIFICATIONFLAG = ? WHERE CB.ID = ?
CashBackAlert.Update.updateBillingStatementAlertGenStatus = UPDATE BILLINGSTATEMENT BS SET BS.NOTIFICATIONFLAG = ? WHERE BS.STATEMENTID = ?

//Cash Back Process
CashBack.Select.getProcessDetails = SELECT PROCESSID,DESCRIPTION,CRITICALSTATUS,ROLLBACKSTATUS,SHEDULEDATE,SHEDULETIME,FREQUENCYTYPE,CONTINUESFREQUENCYTYPE,CONTINUESFREQUENCY,MULTIPLECYCLESTATUS,PROCESSCATEGORYID,DEPENDANCYSTATUS,RUNNINGONMAIN,RUNNINGONSUB,PROCESSTYPE,STATUS,SHEDULEDATETIME,HOLIDAYACTION FROM EODPROCESS WHERE PROCESSID = ?
CashBack.Select.loadInitialConfigurationsForCashback = SELECT CBREDEEMDAYCOUNT FROM COMMONPARAMETER
CashBack.Select.getEligibleAccountsForCashback = SELECT CA.ACCOUNTNO,CA.STATUS AS ACCOUNTSTATUS,TRUNC(CA.NEXTBILLINGDATE) AS NEXTBILLINGDATE,CBP.CREDITOPTION, CBP.MINACCUMULATEDTOCLAIM,CA.CASHBACKPROFILECODE,CA.CASHBACKSTARTDATE,ADD_MONTHS(CA.CASHBACKSTARTDATE,12) AS NEXTCASHBACKSTARTDATE, CA.AVLCASHBACKAMOUNT,NVL(CBP.CASHBACKRATE,0) AS CASHBACKRATE,CBP.MAXCASHBACKPERYEAR,CBP.MINSPENDPERMONTH,CBP.EXPIRYPERIOD AS EXPIRYPERIOD, TRUNC(CA.LASTCASHBACKDATE) AS LASTCASHBACKDATE,CA.CARDNUMBER AS MAINCARDNUMBER,C.CARDSTATUS,CA.NEXTCBREDEEMDATE,CBP.REDEEMRATIO FROM CARDACCOUNT CA LEFT JOIN CASHBACKPROFILE CBP ON CA.CASHBACKPROFILECODE=CBP.PROFILECODE LEFT JOIN CARD C ON CA.CARDNUMBER=C.CARDNUMBER WHERE CASHBACKPROFILECODE IS NOT NULL AND CA.CASHBACKSTARTDATE IS NOT NULL
CashBack.Select.getEligibleAccountsForCashback_appender1 = AND CA.ACCOUNTNO NOT IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS= ?
CashBack.Select.getEligibleAccountsForCashback_appender2 = AND CA.ACCOUNTNO IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS= ? AND EODID < ? AND PROCESSSTEPID <= ? )
CashBack.Select.getCashbackAmount = SELECT TRUNC(STATEMENTENDDATE) AS STATEMENTENDDATE FROM BILLINGSTATEMENT BS WHERE BS.MAINCARDNO=? AND TRUNC(STATEMENTENDDATE)>=TRUNC(?) ORDER BY STATEMENTENDDATE
CashBack.Select.getCashbackAmount_appender1 = SELECT (CASE WHEN SUM(ET.TRANSACTIONAMOUNT)> ? THEN SUM(ET.TRANSACTIONAMOUNT * ? / 100) ELSE 0 END) AS CASHBACKAMOUNT FROM EODTRANSACTION ET WHERE ET.STATUS=? AND TRUNC(TO_DATE(SETTLEMENTDATE,'DD-MM-YY')) > TRUNC(?) AND TRUNC(TO_DATE(SETTLEMENTDATE,'DD-MM-YY')) <= TO_DATE(?,'DD-MM-YY') AND ET.ORIGINALTRANSACTIONTYPE NOT IN(SELECT CBPT.TXNTYPECODE FROM CASHBACKPROFILETXNTYPE CBPT WHERE CBPT.PROFILECODE=?) AND ET.MCC NOT IN(SELECT CBPM.MCCCODE FROM CASHBACKPROFILEMCC CBPM WHERE CBPM.PROFILECODE=?) AND ET.ACCOUNTNO=? AND ET.TRANSACTIONID NOT IN(SELECT TXNID FROM EASYPAYMENTREQUEST WHERE STATUS IN(?,?)) AND ET.ADJUSTMENTSTATUS='NO'
CashBack.Select.getCashbackAmount_appender2 = SELECT (CASE WHEN SUM(ET.TRANSACTIONAMOUNT)> ? THEN SUM(ET.TRANSACTIONAMOUNT * ? / 100) ELSE 0 END) AS CASHBACKAMOUNT FROM EODTRANSACTION ET WHERE ET.STATUS=? AND TRUNC(TO_DATE(SETTLEMENTDATE,'DD-MM-YY')) > TRUNC(?) AND  TRUNC(TO_DATE(SETTLEMENTDATE,'DD-MM-YY')) <= TRUNC(?) AND ET.ORIGINALTRANSACTIONTYPE NOT IN(SELECT CBPT.TXNTYPECODE FROM CASHBACKPROFILETXNTYPE CBPT WHERE CBPT.PROFILECODE=?) AND ET.MCC NOT IN(SELECT CBPM.MCCCODE FROM CASHBACKPROFILEMCC CBPM WHERE CBPM.PROFILECODE=?) AND ET.ACCOUNTNO=? AND ET.TRANSACTIONID NOT IN(SELECT TXNID FROM EASYPAYMENTREQUEST WHERE STATUS IN(?,?)) AND ET.ADJUSTMENTSTATUS='NO'
CashBack.Select.getCashbackAmount_appender3 = SELECT (CASE WHEN SUM(ET.TRANSACTIONAMOUNT)> ? THEN SUM(ET.TRANSACTIONAMOUNT * ? / 100) ELSE 0 END) AS CASHBACKAMOUNT FROM EODTRANSACTION ET WHERE ET.STATUS=? AND TRUNC(TO_DATE(SETTLEMENTDATE,'DD-MM-YY')) > TRUNC(?) AND  TRUNC(TO_DATE(SETTLEMENTDATE,'DD-MM-YY')) <= TRUNC(?) AND ET.ORIGINALTRANSACTIONTYPE NOT IN(SELECT CBPT.TXNTYPECODE FROM CASHBACKPROFILETXNTYPE CBPT WHERE CBPT.PROFILECODE=?) AND ET.MCC NOT IN(SELECT CBPM.MCCCODE FROM CASHBACKPROFILEMCC CBPM WHERE CBPM.PROFILECODE=?) AND ET.ACCOUNTNO=? AND ET.TRANSACTIONID NOT IN(SELECT TXNID FROM EASYPAYMENTREQUEST WHERE STATUS IN(?,?)) AND ET.ADJUSTMENTSTATUS='NO'
CashBack.Select.getCashbackAdjustmentAmount = SELECT NVL(SUM(CASE CRDR WHEN 'DR' THEN -AMOUNT ELSE AMOUNT END),0) AS TOTAL FROM ADJUSTMENT WHERE ADJUSTMENTTYPE=? AND EODSTATUS=? AND STATUS=? AND UNIQUEID IN(SELECT CARDNUMBER FROM CARDACCOUNTCUSTOMER WHERE ACCOUNTNO=?)
CashBack.Insert.addNewCashBack_Insert = INSERT INTO CASHBACK (CASHBACKAMOUNT,EODID,ACCOUNTNUMBER,CREATEDTIME,LASTUPDATEDTIME,EODDATE,FROMDATE,TODATE,TXNVOLUME,ADJUSTEDAMOUNT) VALUES (?,?,?,SYSDATE,SYSDATE,?,?,?,?,?)
CashBack.Update.addNewCashBack_Update = UPDATE CARDACCOUNT SET AVLCASHBACKAMOUNT=AVLCASHBACKAMOUNT+?,LASTCASHBACKDATE=? WHERE ACCOUNTNO=?
CashBack.Update.updateCashbackAdjustmentStatus = UPDATE ADJUSTMENT SET EODSTATUS = ? WHERE UNIQUEID IN(SELECT CARDNUMBER FROM CARDACCOUNTCUSTOMER WHERE ACCOUNTNO=?) AND EODSTATUS=? AND ADJUSTMENTTYPE=?
CashBack.Update.updateCashbackStartDate = UPDATE CARDACCOUNT SET CASHBACKSTARTDATE=? WHERE ACCOUNTNO=?
CashBack.Select.getRedeemRequestAmount = SELECT NVL(SUM(REQUESTEDAMOUNT),0) AS TOTALREDEEMAMOUNT FROM CASHBACKREQUEST WHERE ACCOUNTNO=? AND STATUS='RQAC' AND EODSTATUS=?
CashBack.Select.redeemCashbacks_Select = SELECT ID,(CASHBACKAMOUNT-REDEEMAMOUNT) AS CASHBACKAMOUNT2 FROM CASHBACK WHERE ACCOUNTNUMBER=? AND  ISEXPIRED=0 AND (CASHBACKAMOUNT-REDEEMAMOUNT)>0 ORDER BY EODID
CashBack.Update.redeemCashbacks_Update = UPDATE CASHBACK SET REDEEMAMOUNT=REDEEMAMOUNT+?,REDEEMDATE=?,LASTUPDATEDTIME=SYSDATE,REMARK=? WHERE ID=?
CashBack.Insert.redeemCashbacks_Insert = INSERT INTO CASHBACKEXPREDEEM (ACCOUNTNUMBER, EODID,EODDATE, CREATEDTIME, STATUS, AMOUNT) VALUES (?, ?, ?,SYSDATE, '0', ?)
CashBack.Update.redeemCashbacks_Update_2 = UPDATE CARDACCOUNT SET AVLCASHBACKAMOUNT=AVLCASHBACKAMOUNT-? WHERE ACCOUNTNO=?
CashBack.Update.updateEodStatusInCashbackRequest = UPDATE CASHBACKREQUEST SET EODSTATUS=? WHERE ACCOUNTNO=? AND EODSTATUS=?
CashBack.Select.getRedeemableAmount_Select_1 = SELECT M1 FROM MINIMUMPAYMENT WHERE CARDNO=?
CashBack.Select.getRedeemableAmount_Select_2 = SELECT (?-NVL(SUM(AMOUNT),0)) AS REMAININGCASHBACKFORYEAR FROM CASHBACKEXPREDEEM WHERE TRUNC(EODDATE)>=TRUNC(?) AND ACCOUNTNUMBER=?
CashBack.Select.getRedeemableAmount_Select_3 = SELECT AVLCASHBACKAMOUNT FROM CARDACCOUNT WHERE ACCOUNTNO=?
CashBack.Update.updateNextCBRedeemDate_Update_1 = UPDATE CARDACCOUNT SET NEXTCBREDEEMDATE=NEXTBILLINGDATE+? WHERE ACCOUNTNO=?
CashBack.Update.updateNextCBRedeemDate_Update_2 = UPDATE CARDACCOUNT SET NEXTCBREDEEMDATE=ADD_MONTHS(NEXTBILLINGDATE,3)+? WHERE ACCOUNTNO=?
CashBack.Update.updateNextCBRedeemDate_Update_3 = UPDATE CARDACCOUNT SET NEXTCBREDEEMDATE=ADD_MONTHS(NEXTBILLINGDATE,12)+? WHERE ACCOUNTNO=?
CashBack.Select.getCashbackAmountToBeExpireForAccount = SELECT NVL(SUM(CASHBACKAMOUNT - REDEEMAMOUNT), 0) AS TOTALEXPIREAMOUNT FROM CASHBACK WHERE ACCOUNTNUMBER=? AND  ISEXPIRED='0' AND (CASHBACKAMOUNT-REDEEMAMOUNT)>0
CashBack.Update.expireNonPerformingCashbacks_Update_1 = UPDATE CASHBACK SET ISEXPIRED=2,LASTUPDATEDTIME=SYSDATE,EXPIREDDATE=?,REMARK=? WHERE ISEXPIRED=0 AND ACCOUNTNUMBER=? AND (CASHBACKAMOUNT-REDEEMAMOUNT)>0
CashBack.Insert.expireNonPerformingCashbacks_Insert = INSERT INTO CASHBACKEXPREDEEM (ACCOUNTNUMBER, EODID,EODDATE, CREATEDTIME, STATUS, AMOUNT) VALUES (?, ?, ?,SYSDATE, '2', ?)
CashBack.Update.expireNonPerformingCashbacks_Update_2 = UPDATE CARDACCOUNT SET AVLCASHBACKAMOUNT=0 WHERE ACCOUNTNO=?
CashBack.Update.expireCardCloseCashbacks_Update_1 = UPDATE CASHBACK SET ISEXPIRED=1,LASTUPDATEDTIME=SYSDATE,EXPIREDDATE=?,REMARK=? WHERE ISEXPIRED=0 AND ACCOUNTNUMBER=? AND (CASHBACKAMOUNT-REDEEMAMOUNT)>0
CashBack.Insert.expireCardCloseCashbacks_Insert = INSERT INTO CASHBACKEXPREDEEM (ACCOUNTNUMBER, EODID,EODDATE, CREATEDTIME, STATUS, AMOUNT) VALUES (?, ?, ?,SYSDATE, '1', ?)
CashBack.Update.expireCardCloseCashbacks_Update_2 = UPDATE CARDACCOUNT SET AVLCASHBACKAMOUNT=0 WHERE ACCOUNTNO=?
CashBack.Select.expireCashbacks_Select = SELECT NVL(SUM(CASHBACKAMOUNT-REDEEMAMOUNT),0) AS TOTALEXPIREAMOUNT FROM CASHBACK WHERE ACCOUNTNUMBER=? AND  ISEXPIRED='0' AND TRUNC(ADD_MONTHS(EODDATE,?))<=TRUNC(?) AND (CASHBACKAMOUNT-REDEEMAMOUNT)>0
CashBack.Update.expireCashbacks_Update = UPDATE CASHBACK SET ISEXPIRED=1,LASTUPDATEDTIME=SYSDATE,EXPIREDDATE=?,REMARK=? WHERE ISEXPIRED=0 AND ACCOUNTNUMBER=? AND TRUNC(ADD_MONTHS(EODDATE,?))<=TRUNC(?) AND (CASHBACKAMOUNT-REDEEMAMOUNT)>0
CashBack.Insert.expireCashbacks_Insert = INSERT INTO CASHBACKEXPREDEEM (ACCOUNTNUMBER, EODID,EODDATE, CREATEDTIME, STATUS, AMOUNT) VALUES (?, ?, ?,SYSDATE, '1', ?)
CashBack.Update.updateTotalCBAmount = UPDATE CASHBACK SET TOTALCBAMOUNT=(SELECT AVLCASHBACKAMOUNT FROM CARDACCOUNT WHERE ACCOUNTNO=?) WHERE EODID=? AND ACCOUNTNUMBER=?

//Check Payment For Minimum Amount Process
CheckPaymentForMinimumAmount.Select.getStatementCardList = SELECT BS.CARDNO, CAC.ACCOUNTNO,bs.duedate,bs.minamount,bs.statementstartdate,bs.statementenddate, bs.openingbalance,bs.closingbalance,bs.CLOSINGLOYALTYPOINT FROM CARD C, BILLINGLASTSTATEMENTSUMMARY BS, CARDACCOUNTCUSTOMER CAC WHERE bs.cardno=c.cardnumber AND CAC.CARDNUMBER = c.cardnumber and c.cardstatus not in (?,?,?)
CheckPaymentForMinimumAmount.Select.getAccountNoOnCard = SELECT ACCOUNTNO FROM CARDACCOUNTCUSTOMER WHERE CARDNUMBER=?
CheckPaymentForMinimumAmount.Select.insertToMinPayTable_Select_allPayments = SELECT * FROM MINIMUMPAYMENT WHERE CARDNO=?
CheckPaymentForMinimumAmount.Select.insertToMinPayTable_Select_allPamentsSameDay = SELECT * FROM MINIMUMPAYMENT WHERE CARDNO=? AND LASTEODID=?
CheckPaymentForMinimumAmount.Insert.insertToMinPayTable_Insert = INSERT INTO MINIMUMPAYMENT (CARDNO,M1,M1DATE,STATUS,COUNT,LASTEODID) values (?,?,?,?,1,?)
CheckPaymentForMinimumAmount.Update.insertToMinPayTable_Update = UPDATE MINIMUMPAYMENT SET M" + MONTH + "=?,M" + MONTH + "DATE=?, STATUS=?, COUNT =?, LASTEODID=?,LASTUPDATEDTIME=SYSDATE WHERE CARDNO=?
CheckPaymentForMinimumAmount.Select.getPaymentAmount = SELECT NVL(SUM(TRANSACTIONAMOUNT),0) AS TOTALPAY FROM EODTRANSACTION WHERE TRANSACTIONTYPE IN (?,?,?,?) AND EODID > ? AND EODID <= ? AND STATUS NOT IN(?) AND ACCOUNTNO IN (?)
CheckPaymentForMinimumAmount.Select.getTotalPaymentExceptDueDate = SELECT NVL(SUM(TRANSACTIONAMOUNT),0) AS TOTALPAY FROM EODTRANSACTION WHERE TRANSACTIONTYPE IN (?,?,?,?) AND EODID > ? AND EODID < ? AND STATUS NOT IN(?) AND ACCOUNTNO IN (?)

//Cheque Payment Process
ChequePayment.Select.getChequePaymentsBackup = SELECT CARDNUMBER,EODID,TRANSACTIONAMOUNT,CHEQUENUMBER,TRANSACTIONDATE,TRACEID,SEQUENCENUMBER FROM PAYMENT WHERE TRANSACTIONTYPE=? and STATUS=?
ChequePayment.Select.getDelinquencyStatus = SELECT RISKCLASS, NDIA FROM DELINQUENTACCOUNT WHERE CARDNUMBER = ?
ChequePayment.Select.getStatementCount = SELECT COUNT(B.CARDNO) AS COUNT FROM BILLINGSTATEMENT B WHERE B.CARDNO=?  GROUP BY B.CARDNO
ChequePayment.Insert.insertChequePayments = INSERT INTO CHEQUEPAYMENT (EODID, CARDNUMBER,MAINCARDNO, AMOUNT, CHEQUEDATE, MINAMOUNT, FORWARDINTEREST, INTERESTRATE, CHEQUESTATUS, DELINQUENTCLASS, CARDSTATUS, DUEDATE, STATEMENTSTARTEODID, STATEMENTENDEODID, CHEQUERETURNDATE, RETURNREASON, LASTUPDATEDUSER, LASTUPDATEDDATE,CREATEDTIME, SEQUENCENUMBER, NDIA)VALUES( ?,?,?,?,?,?,?,?/*inerstrate*/,?,?/*delclass*/,?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?)
ChequePayment.Update.updateChequePayment = UPDATE PAYMENT SET STATUS=? WHERE CARDNUMBER=? AND STATUS=? AND TRACEID=? AND SEQUENCENUMBER=?

//Cheque Return Process
ChequeReturn.Select.getChequeReturns = SELECT * FROM PAYMENT WHERE TRANSACTIONTYPE=? AND STATUS=? AND EODID =?
ChequeReturn.Update.updateChequeReturns = UPDATE CHEQUEPAYMENT SET CHEQUESTATUS=?, CHEQUERETURNDATE=?,LASTUPDATEDDATE=SYSDATE WHERE CARDNUMBER=? AND SEQUENCENUMBER=?
ChequeReturn.Update.updateChequeReturnsForEODPayment = UPDATE EODPAYMENT SET STATUS=?, LASTUPDATEDDATE=SYSDATE WHERE CARDNUMBER=? AND SEQUENCENUMBER=?
ChequeReturn.Select.getNewCardNumber = SELECT CR1.NEWCARDNUMBER CARDNUMBER FROM CARDREPLACE CR1 LEFT JOIN CARDREPLACE CR2 ON CR2.OLDCARDNUMBER = CR1.NEWCARDNUMBER INNER JOIN CARD C ON C.CARDNUMBER = CR1.NEWCARDNUMBER WHERE C.CARDSTATUS NOT IN (?,?) START WITH CR1.OLDCARDNUMBER = ? CONNECT BY PRIOR CR1.NEWCARDNUMBER = CR1.OLDCARDNUMBER
ChequeReturn.Select.returnChequePaymentDetails = SELECT CP.*,P.CARDNUMBER AS OLDCARDNUMBER,P.SEQUENCENUMBER AS CQRTSEQ,P.CHEQUE_RET_CODE FROM CHEQUEPAYMENT CP LEFT JOIN PAYMENT P ON CP.SEQUENCENUMBER=P.TRACEID WHERE CP.CHEQUESTATUS=? AND CP.STATUS=? AND P.TRANSACTIONTYPE=? AND p.cardnumber = '4380439574186260'
ChequeReturn.Select.returnChequePaymentDetails_OrderBy = ORDER BY CP.CARDNUMBER
ChequeReturn.Select.getCardAccountCustomer = SELECT CC.CUSTOMERID,CA.ACCOUNTNO,C.CARDNUMBER, C.MAINCARDNO FROM CARDACCOUNT CA,CARD C,CARDCUSTOMER CC,CARDACCOUNTCUSTOMER CAC WHERE C.CARDNUMBER = CAC.CARDNUMBER AND CA.ACCOUNTNO = CAC.ACCOUNTNO AND  CC.CUSTOMERID = CAC.CUSTOMERID AND C.CARDNUMBER =?
ChequeReturn.Select.getChequeKnockOffBean = SELECT ECB.CARDNUMBER,ECB.MAINCARDNO,ECB.ISPRIMARY,CAC.CUSTOMERID,CAC.ACCOUNTNO,ECB.MAINFINCHARGEKNOCKOFF,ECB.MAINCASHADVANCEKNOCKOFF, ECB.MAINTRANSACTIONKNOCKOFF,ECB.SUPFINCHARGEKNOCKOFF,ECB.SUPCASHADVANCEKNOCKOFF, ECB.SUPTRANSACTIONKNOCKOFF,ECB.AMOUNT FROM EODPAYMENT ECB INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = ECB.CARDNUMBER WHERE ECB.CARDNUMBER = ? and ECB.STATUS=?
ChequeReturn.Select.getEOMPendingKnockOffList = SELECT ECB.CARDNUMBER,ECB.MAINCARDNUMBER,CAC.CUSTOMERID,CAC.ACCOUNTNO,ECB.ISPRIMARY,ECB.CUMFINANCIALCHARGE,ECB.CUMCASHADVANCE, ECB.CUMTRANSACTION FROM EOMCARDBALANCE ECB INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = ECB.CARDNUMBER WHERE ECB.CARDNUMBER = ? AND ECB.STATUS=? AND (ECB.CUMFINANCIALCHARGE>0 OR ECB.CUMCASHADVANCE>0 OR ECB.CUMTRANSACTION >0)
ChequeReturn.Update.updateEOMCARDBalanceKnockOn = UPDATE EOMCARDBALANCE SET CUMCASHADVANCE = CUMCASHADVANCE + ?,CUMTRANSACTION = CUMTRANSACTION + ?,CUMFINANCIALCHARGE = CUMFINANCIALCHARGE + ?,EODID=?,LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE CARDNUMBER = ?
ChequeReturn.Update.updateCustomerOtb = UPDATE CARDCUSTOMER SET OTBCREDIT= OTBCREDIT - ?,OTBCASH= OTBCASH - ?,LASTUPDATEDUSER=?, LASTUPDATEDTIME=SYSDATE WHERE CUSTOMERID=?
ChequeReturn.Update.updateAccountOtb = UPDATE CARDACCOUNT SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ?,LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE ACCOUNTNO=?
ChequeReturn.Update.updateCardOtb = UPDATE CARD SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ?,TEMPCREDITAMOUNT = TEMPCREDITAMOUNT + ?,TEMPCASHAMOUNT = TEMPCASHAMOUNT + ?,LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE CARDNUMBER=?
ChequeReturn.Update.updateOnlineCustomerOtb = UPDATE ECMS_ONLINE_CUSTOMER SET OTBCREDIT= OTBCREDIT - ?,OTBCASH= OTBCASH - ? WHERE CUSTOMERID = ?
ChequeReturn.Update.updateOnlineAccountOtb = UPDATE ECMS_ONLINE_ACCOUNT SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ? WHERE ACCOUNTNUMBER=?
ChequeReturn.Update.updateOnlineCardOtb = UPDATE ECMS_ONLINE_CARD SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ?,TEMPCREDITAMOUNT = TEMPCREDITAMOUNT + ?,TEMPCASHAMOUNT = TEMPCASHAMOUNT + ?,LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE WHERE CARDNUMBER=?
ChequeReturn.Update.updateEODCARDBalanceKnockOn = UPDATE EODCARDBALANCE SET CUMCASHADVANCES = CUMCASHADVANCES + ?,CUMTRANSACTIONS = CUMTRANSACTIONS + ?,FINANCIALCHARGES = FINANCIALCHARGES + ?,EODCLOSINGBAL = EODCLOSINGBAL - ?,LASTUPDATEDUSER = ?, LASTUPDATEDTIME = SYSDATE WHERE CARDNUMBER = ?
ChequeReturn.Select.getIntProf = SELECT IP.INTERESTRATE, IP.INTERESTPERIODVALUE FROM CARDACCOUNT CA INNER JOIN INTERESTPROFILE IP ON IP.INTERESTPROFILECODE = CA.INTERESTPROFILECODE WHERE CA.ACCOUNTNO= ?
ChequeReturn.Select.getTxnIdForLastChequeByAccount = SELECT TRANSACTIONID FROM EODTRANSACTION WHERE ACCOUNTNO=? AND SEQUENCENUMBER=? AND TRANSACTIONTYPE=?
ChequeReturn.Select.getTxnIdForLastCheque = SELECT TRANSACTIONID FROM EODTRANSACTION WHERE CARDNUMBER=? AND SEQUENCENUMBER=? AND TRANSACTIONTYPE=?
ChequeReturn.Select.checkDuplicateChequeReturnEntry = SELECT TRANSACTIONID FROM EODTRANSACTION WHERE CARDNUMBER=? AND TRANSACTIONAMOUNT=? AND TRANSACTIONID=? AND STATUS=? AND SEQUENCENUMBER=? AND PAYMENTTYPE=? AND TRANSACTIONTYPE=?
ChequeReturn.Insert.insertReturnChequeToEODTransaction = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,TRANSACTIONAMOUNT,CURRENCYTYPE,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,STATUS,TRANSACTIONDESCRIPTION,CRDR,TRACEID,SEQUENCENUMBER,PAYMENTTYPE,TRANSACTIONTYPE,CARDASSOCIATION) VALUES (?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?)
ChequeReturn.Update.addCardFeeCount_Update = UPDATE CARDFEECOUNT SET FEECOUNT = FEECOUNT + 1,CASHAMOUNT=CASHAMOUNT+?, LASTUPDATEDUSER= ?, LASTUPDATEDTIME= SYSDATE, STATUS =? WHERE CARDNUMBER = ? AND FEECODE = ?
ChequeReturn.Insert.addCardFeeCount_Insert = INSERT INTO CARDFEECOUNT (CARDNUMBER,FEECODE,FEECOUNT,CASHAMOUNT,STATUS,CREATEDDATE,LASTUPDATEDTIME,LASTUPDATEDUSER) VALUES (?,?,?,?,?,TO_DATE(?,'DD-MM-YY'),SYSDATE,?)
ChequeReturn.Select.checkFeeExistForCard = SELECT COUNT(C.CARDNUMBER) AS RECORDCOUNT FROM CARD C INNER JOIN FEEPROFILEFEE FPF ON C.FEEPROFILECODE  = FPF.FEEPROFILECODE WHERE C.CARDNUMBER   = ? AND FPF.FEECODE NOT IN (SELECT PFPF.FEECODE FROM CARD C INNER JOIN PROMOFEEPROFILE PFP ON C.PROMOFEEPROFILECODE = PFP.PROMOFEEPROFILECODE INNER JOIN PROMOFEEPROFILEFEE PFPF ON C.PROMOFEEPROFILECODE = PFPF.PROMOFEEPROFILECODE WHERE C.CARDNUMBER = ? AND STATUS <> ?) AND FPF.FEECODE = ?
ChequeReturn.Select.getFeeCode = SELECT C.FEECOUNT FROM CARDFEECOUNT C WHERE C.CARDNUMBER = ? AND C.FEECODE = ?
ChequeReturn.Update.updatePaymentStatus = UPDATE PAYMENT SET STATUS=? WHERE SEQUENCENUMBER=? AND CARDNUMBER=?
ChequeReturn.Update.updateTransactionEODStatus = UPDATE TRANSACTION SET EODSTATUS=? WHERE CB_SEQ_NO = ? AND CARDNO IN (?, ?)\
ChequeReturn.Update.updateChequeStatusForEODTxn = UPDATE EODTRANSACTION SET STATUS=? WHERE ACCOUNTNO=? AND TRANSACTIONTYPE=? AND SEQUENCENUMBER=?
ChequeReturn.Update.updateChequePaymentStatus = UPDATE CHEQUEPAYMENT SET STATUS=? WHERE ID=?
ChequeReturn.Select.getAccountNoOnCard = SELECT ACCOUNTNO FROM CARDACCOUNTCUSTOMER WHERE CARDNUMBER=?
ChequeReturn.Select.getPaymentAmountBetweenDueDate = SELECT NVL(SUM(TRANSACTIONAMOUNT),0) AS TOTALPAY FROM EODTRANSACTION WHERE TRANSACTIONTYPE =? AND EODID > (SELECT NVL(ENDEODID,0) AS ENDEODID FROM BILLINGSTATEMENT WHERE ACCOUNTNO = ? AND STARTEODID = ?) AND SETTLEMENTDATE <= TO_DATE(?,'DD-MM-YY') AND STATUS IN(?) AND ACCOUNTNO IN (?)
ChequeReturn.Select.getEodInterestForCard = SELECT CARDNO, FORWARDAMOUNT, CURRENTINTEREST,ACTUALINTEREST, INTERESTRATE, DUEDATE FROM EODINTEREST WHERE CARDNO=?
ChequeReturn.Update.updateEodInterestForCard = UPDATE EODINTEREST SET ACTUALINTEREST =ACTUALINTEREST+?,CURRENTINTEREST=CURRENTINTEREST+? WHERE CARDNO = ?
ChequeReturn.Select.getFeeCodeIfThereExists = SELECT COUNT(C.CARDNUMBER) AS EECOUNT FROM CARDFEECOUNT C WHERE C.CARDNUMBER = ? AND C.FEECODE = ?
ChequeReturn.Update.restoreMinimumPayment = UPDATE MINIMUMPAYMENT M SET(CARDNO,M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,STATUS,CREATEDTIME,LASTUPDATEDTIME,LASTUPDATEDUSER,COUNT,M1DATE,M2DATE,M3DATE,M4DATE,M5DATE,M6DATE,M7DATE,M8DATE,M9DATE,M10DATE,M11DATE,M12DATE,LASTEODID)=(SELECT LM.* FROM BACKUPMINIMUMPAYMENT LM WHERE LM.CARDNO=? AND LM.EODID=M.LASTEODID AND ROWNUM=1) WHERE EXISTS (SELECT B.CARDNO FROM BACKUPMINIMUMPAYMENT B WHERE B.CARDNO=M.CARDNO AND B.EODID=M.LASTEODID  AND B.CARDNO=?)
ChequeReturn.Select.getCardBlockOldCardStatus = SELECT OLDSTATUS,NEWSTATUS,BLOCKREASON FROM CARDBLOCK WHERE CARDNUMBER = ? AND STATUS IN(?)
ChequeReturn.Update.updateCardStatus = UPDATE CARD SET CARDSTATUS=? , LASTUPDATEDTIME = SYSDATE , LASTUPDATEDUSER = ? WHERE CARDNUMBER = ?
ChequeReturn.Select.getRiskClassOnNdia = SELECT BUCKETID, MINNDIA FROM BUCKET WHERE CASE WHEN (SELECT MAX(MAXNDIA) FROM BUCKET WHERE STATUS = 'ACT') < ? THEN (SELECT MAX(BUCKETID) FROM BUCKET WHERE STATUS = 'ACT') ELSE (SELECT BUCKETID FROM BUCKET WHERE STATUS = 'ACT' AND MINNDIA <= ? AND MAXNDIA >= ?) END = BUCKETID
ChequeReturn.Update.updateDelinquencyStatus = UPDATE DELINQUENTACCOUNT SET RISKCLASS=?, NDIA=? WHERE CARDNUMBER = ?
ChequeReturn.Select.insertToMinPayTableOld_allPayments_Select = SELECT * FROM MINIMUMPAYMENT WHERE CARDNO=?
ChequeReturn.Select.insertToMinPayTableOld_allPaymentsSameDay_Select = SELECT COUNT(*) AS RECORDCOUNT FROM MINIMUMPAYMENT WHERE CARDNO=? AND LASTEODID=?
ChequeReturn.Insert.insertToMinPayTableOld_Insert = INSERT INTO MINIMUMPAYMENT (CARDNO,M1,M1DATE,STATUS,COUNT,LASTEODID) values (?,?,?,?,1,?)
ChequeReturn.Update.insertToMinPayTableOld_Update = UPDATE MINIMUMPAYMENT SET M" + month + "=?,M" + month + "DATE=?, STATUS=?, COUNT =?, LASTEODID=?,LASTUPDATEDTIME=sysdate WHERE CARDNO=?

//Clear MinAmount And TempBlock Process 
ClearMinAmountAndTempBlock.Select.getAllCards = SELECT C.CARDNUMBER, C.CARDCATEGORYCODE FROM CARD C WHERE C.MAINCARDNO = ? AND C.CARDSTATUS NOT IN(?,?,?)
ClearMinAmountAndTempBlock.Select.removeFromMinPayTable_allMinPayments = SELECT * FROM MINIMUMPAYMENT WHERE CARDNO=? AND COUNT>0
ClearMinAmountAndTempBlock.Insert.removeFromMinPayTable_insertToBackuptable = INSERT INTO BACKUPMINIMUMPAYMENT (SELECT M.* FROM MINIMUMPAYMENT M WHERE CARDNO=? AND COUNT>0)
ClearMinAmountAndTempBlock.Delete.removeFromMinPayTable_removeFromTriggerCard = DELETE FROM TRIGGERCARDS WHERE CARDNO=?
ClearMinAmountAndTempBlock.Insert.removeFromMinPayTable_Update = UPDATE MINIMUMPAYMENT SET " + monthCount + " STATUS=? ,COUNT =?, LASTUPDATEDTIME=sysdate WHERE CARDNO=?
ClearMinAmountAndTempBlock.Update.updateCardBlock = UPDATE CARDBLOCK SET OLDSTATUS=? ,NEWSTATUS=?,LASTEODUPDATEDDATE=? WHERE STATUS=? AND CARDNUMBER=?
ClearMinAmountAndTempBlock.Select.getMinimumPaymentExistStatementDate = SELECT BS.STATEMENTENDDATE, BS.TOTALMINPAYMENT, BS.DUEDATE FROM MINIMUMPAYMENT MP INNER JOIN BILLINGSTATEMENT BS ON MP.CARDNO = BS.MAINCARDNO WHERE BS.MAINCARDNO = ? AND TRUNC(MP.M" + monthNo + "DATE) = TRUNC(BS.DUEDATE)

//Collection And Recovery Alert Process
CollectionAndRecoveryAlert.Select.getConfirmedCardToAlert = SELECT CARDNO, LASTTRIGGERPOINT FROM TRIGGERCARDS WHERE NOTIFICATIONFLAG = ?
CollectionAndRecoveryAlert.Select.getConfirmedCardToAlert_Appender1 = AND CARDNO NOT IN (SELECT CARDNO FROM EODERRORCARDS WHERE STATUS = ?)
CollectionAndRecoveryAlert.Select.getConfirmedCardToAlert_Appender2 = AND CARDNO IN (SELECT CARDNO FROM EODERRORCARDS WHERE PROCESSSTEPID <= (SELECT PROCESSSTEPID FROM EODERRORCARDS WHERE ERRORPROCESSID = ?) AND STATUS = ?)
CollectionAndRecoveryAlert.Update.updateAlertGenStatus = UPDATE TRIGGERCARDS SET NOTIFICATIONFLAG = ? WHERE CARDNO = ? AND LASTTRIGGERPOINT = ?


//Collection And Recovery
CollectionAndRecovery.Select.getNoOfDaysOnTriggerPoint = CollectionAndRecovery.Select.getNoOfDaysOnTriggerPoint = SELECT NOOFDAYS FROM ALLOCATIONRULE  WHERE TRIGGERPOINT = ?
CollectionAndRecovery.Select.getCardListForCollectionAndRecoveryOnDueDate_Select1 = SELECT CARDNO,DUEDATE,MINAMOUNT FROM BILLINGLASTSTATEMENTSUMMARY  WHERE  TO_DATE(DUEDATE, 'DD-MM-YY') -?= TO_DATE(?, 'DD-MM-YY')  AND MINAMOUNT > 0
CollectionAndRecovery.Select.getCardListForCollectionAndRecoveryOnDueDate_Select2 = SELECT B.CARDNO,  B.DUEDATE,  B.MINAMOUNT FROM BILLINGLASTSTATEMENTSUMMARY B,  TRIGGERCARDS T WHERE T.LASTTRIGGERPOINT = ? AND TO_DATE(DUEDATE, 'DD-MM-YY') + ? = TO_DATE(?, 'DD-MM-YY') AND T.CARDNO =B.CARDNO
CollectionAndRecovery.Select.getCardListForCollectionAndRecoveryOnStatmentDate_Select1 = SELECT B.CARDNO,  B.DUEDATE,  B.MINAMOUNT FROM CARDACCOUNT C,  BILLINGLASTSTATEMENTSUMMARY B,  TRIGGERCARDS T WHERE TO_DATE(C.NEXTBILLINGDATE, 'DD-MM-YY') = TO_DATE(?, 'DD-MM-YY') AND B.CARDNO = C.CARDNUMBER AND T.LASTTRIGGERPOINT = ? AND T.CARDNO = B.CARDNO
CollectionAndRecovery.Select.getCardListForCollectionAndRecoveryOnStatmentDate_Select2 = SELECT B.CARDNO,  B.DUEDATE,  B.MINAMOUNT FROM  BILLINGLASTSTATEMENTSUMMARY B,  TRIGGERCARDS T WHERE TO_DATE(B.STATEMENTENDDATE, 'DD-MM-YY') + ? = TO_DATE(?, 'DD-MM-YY') AND T.CARDNO = B.CARDNO AND T.LASTTRIGGERPOINT = ?
CollectionAndRecovery.Select.CheckForTriggerPoint = SELECT COUNT(*) FROM TRIGGERCARDS WHERE CARDNO = ?
CollectionAndRecovery.Insert.addCardToTriggerCards = INSERT INTO TRIGGERCARDS (CARDNO,LASTTRIGGERPOINT,CREATEDTIME,LASTUPDATEDTIME,LASTUPDATEDUSER,NOTIFICATIONFLAG,LETTERGENSTATUS) VALUES(?,?,SYSDATE,SYSDATE,?,0,?)
CollectionAndRecovery.Update.updateTriggerCards = UPDATE TRIGGERCARDS SET LASTTRIGGERPOINT = ? ,LASTUPDATEDTIME = TO_DATE(SYSDATE, 'DD-MM-YY')  ,LASTUPDATEDUSER = ?,NOTIFICATIONFLAG = 0,LETTERGENSTATUS =? WHERE CARDNO = ?
CollectionAndRecovery.Insert.addDetailsToCardLetterNotifyTable = INSERT INTO CARDLETTERNOTIFY (CARDNO, NAME, NAME, ACCOUNTNO, MOBILENO, EMAIL, ADDRESS, DUEDATE, DUEDATE, DUEAMOUNT, REMARK, NOTIFYFLAG) VALUES(? ,? ,? ,? ,? ,? ,TO_DATE(?, 'YYYY-MM-DD') ,? ,? ,0)

//Snap Shot Process
SnapShot.Select.checkEodComplete = SELECT COUNT(*) AS COUNT FROM EODPROCESSSUMMERY WHERE STATUS  IN (?) AND EODID=?

//Runnable Fee Process
RunnableFee.Select.getAllActiveCards = SELECT C.CARDNUMBER,C.MAINCARDNO,C.CARDSTATUS,C.CREDITLIMIT,C.CASHLIMIT,C.OTBCREDIT,C.OTBCASH,C.PRIORITYLEVEL,TO_DATE(C.NEXTANNIVERSARYDATE,'dd/MON/YY') AS NEXTANNIVERSARYDATE,C.ACTIVATIONDATE,C.CARDCATEGORYCODE,CA.STATUS AS ACCOUNTSTATUS FROM CARD C INNER JOIN CARDACCOUNT CA ON C.MAINCARDNO = CA.CARDNUMBER WHERE C.CARDSTATUS NOT IN (?,?) AND ROWNUM <= 501
RunnableFee.Select.findCashAdvances = SELECT CARDNUMBER,ACCOUNTNO,TRANSACTIONID,TRANSACTIONAMOUNT,SETTLEMENTDATE,TRANSACTIONDATE FROM EODTRANSACTION WHERE CARDNUMBER = ? AND TRANSACTIONTYPE = ? AND STATUS IN(?,?) AND EODID = ?
RunnableFee.Update.updateNextAnniversaryDate = UPDATE CARD SET NEXTANNIVERSARYDATE = ADD_MONTHS(NEXTANNIVERSARYDATE, 12)  WHERE CARDNUMBER =? AND NEXTANNIVERSARYDATE IS NOT NULL
RunnableFee.Select.checkFeeExistForCard = SELECT COUNT(*) AS RECORDCOUNT FROM CARD C INNER JOIN FEEPROFILEFEE FPF ON C.FEEPROFILECODE = FPF.FEEPROFILECODE WHERE C.CARDNUMBER = ? AND FPF.FEECODE NOT IN (SELECT PFPF.FEECODE FROM CARD C INNER JOIN PROMOFEEPROFILE PFP ON C.PROMOFEEPROFILECODE = PFP.PROMOFEEPROFILECODE INNER JOIN PROMOFEEPROFILEFEE PFPF ON C.PROMOFEEPROFILECODE = PFPF.PROMOFEEPROFILECODE WHERE C.CARDNUMBER = ? AND STATUS <> ?) AND FPF.FEECODE = ?
RunnableFee.Update.addCardFeeCount_Update = UPDATE CARDFEECOUNT SET FEECOUNT = FEECOUNT + 1,CASHAMOUNT=CASHAMOUNT+?, LASTUPDATEDUSER= ?, LASTUPDATEDTIME= SYSDATE, STATUS =? WHERE CARDNUMBER = ? AND FEECODE = ?
RunnableFee.Insert.addCardFeeCount_Insert = INSERT INTO CARDFEECOUNT (CARDNUMBER,FEECODE,FEECOUNT,CASHAMOUNT,STATUS,CREATEDDATE,LASTUPDATEDTIME,LASTUPDATEDUSER) VALUES (?,?,?,?,?,TO_DATE(?,'DD-MM-YY'),SYSDATE,?)
RunnableFee.Select.getFeeCode = SELECT C.FEECOUNT FROM CARDFEECOUNT C WHERE C.CARDNUMBER = ? AND C.FEECODE = ?
RunnableFee.Select.getLastStatementSummaryInfor = SELECT BSS.STATEMENTID,BSS.OPENINGBALANCE,BSS.CLOSINGBALANCE,BSS.MINAMOUNT,BSS.DUEDATE,BSS.STATEMENTSTARTDATE,BSS.STATEMENTENDDATE,BSS.CLOSINGLOYALTYPOINT,bs.NOOFDAYSINAREERS FROM BILLINGLASTSTATEMENTSUMMARY BSS LEFT JOIN BILLINGSTATEMENT BS ON BS.STATEMENTID = BSS.STATEMENTID WHERE BSS.CARDNO = ?
RunnableFee.Select.getNextBillingDateForCard = SELECT NEXTBILLINGDATE FROM CARDACCOUNT WHERE CARDNUMBER = (SELECT MAINCARDNO FROM CARD WHERE CARDNUMBER =?)
RunnableFee.Select.getCardFeeProfileForCard = SELECT CD.FEEPROFILECODE,FF.CURRENCYCODE,FF.CRORDR,FF.FLATFEE,FF.MINIMUMAMOUNT,FF.MAXIMUMAMOUNT,FF.PERSENTAGE, FF.COMBINATION FROM CARD CD,FEEPROFILEFEE FF WHERE  CD.FEEPROFILECODE = FF.FEEPROFILECODE AND CD.CARDNUMBER=? AND FF.FEECODE=? AND CD.CARDSTATUS <> ?
RunnableFee.Insert.insertToEODcardFee = INSERT INTO EODCARDFEE(EODID,CARDNUMBER,ACCOUNTNO,CRDR,FEEAMOUNT,CURRENCYTYPE,EFFECTDATE,FEETYPE,LASTUPDATEDUSER,STATUS,TRANSACTIONID ) VALUES (?,?,?,?,?,?,?,?,?,?,?)
RunnableFee.Update.updateCardFeeCount = UPDATE CARDFEECOUNT SET FEECOUNT = 0, CASHAMOUNT=0, STATUS=? WHERE CARDNUMBER = ? AND FEECODE = ?
RunnableFee.Select.checkDuplicateCashAdvances = SELECT COUNT(*) AS RECORDCOUNT FROM EODCARDFEE WHERE CARDNUMBER=? AND TRANSACTIONID=? AND EODID=? AND FEETYPE=?
RunnableFee.Select.getAccountNoOnCard = SELECT ACCOUNTNO FROM CARDACCOUNTCUSTOMER WHERE CARDNUMBER=?
RunnableFee.Select.getTotalPayment = SELECT NVL(SUM(TRANSACTIONAMOUNT),0) AS TOTAL FROM EODTRANSACTION WHERE ACCOUNTNO= ? AND TRANSACTIONTYPE IN (?) AND EODID > ? AND EODID <= ? AND STATUS NOT IN(?)

//EOM Interest Calculation Process
EOMInterest.Select.getEomCardList = SELECT CA.ACCOUNTNO, CA.CARDNUMBER, CA.STATUS, IP.INTERESTRATE, IP.INTERESTPERIODVALUE FROM CARDACCOUNT CA INNER JOIN INTERESTPROFILE IP ON CA.INTERESTPROFILECODE = IP.INTERESTPROFILECODE INNER JOIN CARD C ON CA.CARDNUMBER = C.CARDNUMBER WHERE to_number(CA.BILLINGDATE) <= ? AND (C.CARDSTATUS NOT  IN(?) OR (C.CARDSTATUS = ? AND C.CLOSEFLAG = ?)) AND CA.NEXTBILLINGDATE <= TO_DATE(?, 'DD-MM-YY')
EOMInterest.Select.getEomCardList_Appender1 = AND CA.ACCOUNTNO NOT IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS=?)
EOMInterest.Select.getEomCardList_Appender2 = AND CA.ACCOUNTNO IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS=? AND EODID < ? AND PROCESSSTEPID <=?)
EOMInterest.Select.CheckForCardIncrementStatus = SELECT C.CARDSTATUS AS  CARDSTATUS FROM CARD C WHERE C.CARDNUMBER=?
EOMInterest.Delete.clearEomInterest = DELETE FROM EOMINTEREST WHERE CARDNO = ?
EOMInterest.Select.getLastTwoBillingDatesOnAccount = SELECT * FROM (SELECT ROWNUM RN,STATEMENTENDDATE FROM(SELECT STATEMENTENDDATE FROM BILLINGSTATEMENT WHERE ACCOUNTNO = ? ORDER BY STATEMENTENDDATE DESC))" + " WHERE RN BETWEEN 0 AND 2
EOMInterest.Select.getLastTwoBillingDatesOnAccount = SELECT * FROM (SELECT ROWNUM RN,STATEMENTSTARTDATE,THISBILLOPERNINGBALANCE,STARTEODID,ENDEODID,THISBILLCLOSINGBALANCE,STATEMENTENDDATE,MINPAYMENTDUE,DUEDATE FROM(SELECT STATEMENTSTARTDATE,THISBILLOPERNINGBALANCE,STARTEODID,ENDEODID,THISBILLCLOSINGBALANCE,STATEMENTENDDATE,MINPAYMENTDUE,DUEDATE FROM BILLINGSTATEMENT WHERE ACCOUNTNO = ? ORDER BY STATEMENTENDDATE DESC)) WHERE RN BETWEEN 0 AND 1
EOMInterest.Insert.getEOMInterest_Appender1 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ACCOUNTNO, EODID, TRANSACTIONID, TRANSACTIONAMOUNT, TRANSACTIONTYPE, SETTLEMENTDATE, CRDR FROM EODTRANSACTION WHERE EODID > ? AND EODID < ? AND ACCOUNTNO = ? AND ADJUSTMENTSTATUS = 'NO' AND STATUS NOT IN (?) ORDER BY SETTLEMENTDATE
EOMInterest.Insert.getEOMInterest_Appender2 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ACCOUNTNO, EODID, TRANSACTIONID, TRANSACTIONAMOUNT, TRANSACTIONTYPE, SETTLEMENTDATE, CRDR FROM EODTRANSACTION WHERE EODID < ? AND ACCOUNTNO = ? AND ADJUSTMENTSTATUS = 'NO' AND STATUS NOT IN (?) ORDER BY SETTLEMENTDATE
EOMInterest.Insert.getEOMInterest_Appender3 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ?, ?, ID, AMOUNT, TRANSACTIONTYPE, ADJUSTDATE, CRDR FROM ADJUSTMENT WHERE 1 = 1 AND ADJUSTDATE < TO_DATE(?, 'dd-MM-YY') AND ADJUSTDATE > TO_DATE(?, 'dd-MM-YY') AND STATUS IN (?,?) AND EODSTATUS = ? AND ADJUSTMENTTYPE NOT IN (?,?) AND uniqueid IN (SELECT CA.CARDNUMBER FROM CARDACCOUNTCUSTOMER CA, CARD CD WHERE CA.cardnumber = CD.CARDNUMBER AND CA.ACCOUNTNO = ?) ORDER BY ADJUSTDATE
EOMInterest.Insert.getEOMInterest_Appender4 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ?, ?, ID, AMOUNT, TRANSACTIONTYPE, ADJUSTDATE, CRDR FROM ADJUSTMENT WHERE 1 = 1 AND ADJUSTDATE < TO_DATE(?, 'dd-MM-YY') AND STATUS = ? AND EODSTATUS = ? AND ADJUSTMENTTYPE NOT IN (?,?) AND uniqueid IN (SELECT CA.CARDNUMBER FROM CARDACCOUNTCUSTOMER CA, CARD CD WHERE CA.cardnumber = CD.CARDNUMBER AND CA.ACCOUNTNO = ? ) ORDER BY ADJUSTDATE
EOMInterest.Insert.getEOMInterest_Appender5 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ACCOUNTNO, ?, EODFEEID, FEEAMOUNT, FEETYPE, EFFECTDATE, CRDR FROM EODCARDFEE WHERE EFFECTDATE > TO_DATE(?, 'dd-MM-YY') AND EFFECTDATE < TO_DATE(?, 'dd-MM-YY') AND ACCOUNTNO = ? AND ADJUSTMENTSTATUS IN (?) ORDER BY EFFECTDATE
EOMInterest.Insert.getEOMInterest_Appender6 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ACCOUNTNO, ?, EODFEEID, FEEAMOUNT, FEETYPE, EFFECTDATE, CRDR FROM EODCARDFEE WHERE EFFECTDATE > TO_DATE(?, 'dd-MM-YY') AND EFFECTDATE < TO_DATE(?, 'dd-MM-YY') AND ACCOUNTNO = ? AND ADJUSTMENTSTATUS IN (?) ORDER BY EFFECTDATE
EOMInterest.Insert.getEOMInterest_Appender7 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ACCOUNTNO, EODID, TRANSACTIONID, TRANSACTIONAMOUNT, TRANSACTIONTYPE, SETTLEMENTDATE, CRDR FROM EODTRANSACTION WHERE EODID > ? AND EODID <= ? AND ACCOUNTNO = ? AND ADJUSTMENTSTATUS = 'NO' AND TRANSACTIONTYPE IN (?,?,?,?) AND STATUS NOT IN (?) ORDER BY SETTLEMENTDATE
EOMInterest.Insert.getEOMInterest_Appender8 = INSERT INTO TEMPTRANSACTIONDETAILS(ACCOUNTNO, EODID, TRANSACTIONID, AMOUNT, TXNTYPE, TXNCHECKDATE, CRDR) SELECT ?, ?, ID, AMOUNT, TRANSACTIONTYPE, ADJUSTDATE, CRDR FROM ADJUSTMENT WHERE ADJUSTDATE <= TO_DATE(?, 'dd-MM-YY') AND ADJUSTDATE > TO_DATE(?, 'dd-MM-YY') AND CRDR IN(?) AND STATUS = ? AND EODSTATUS = ? AND ADJUSTMENTTYPE NOT IN (?,?) AND uniqueid IN (SELECT CA.CARDNUMBER FROM CARDACCOUNTCUSTOMER CA, CARD CD WHERE CA.cardnumber = CD.CARDNUMBER AND CA.ACCOUNTNO = ?) ORDER BY ADJUSTDATE
EOMInterest.Select.getEOMInterest_Select1 = SELECT ACCOUNTNO, AMOUNT, CRDR, CREATEDTIME, EODID, LASTUPDATEDTIME, LASTUPDATEDUSER, TRANSACTIONID, TXNCHECKDATE, TXNTYPE FROM TEMPTRANSACTIONDETAILS WHERE ACCOUNTNO = ? ORDER BY TXNCHECKDATE ASC
EOMInterest.Select.getEOMInterest_Select2 = SELECT TO_DATE(TXNCHECKDATE,'dd-MM-YY') AS TXNCHECKDATE from TEMPTRANSACTIONDETAILS WHERE ACCOUNTNO = ? ORDER BY TXNCHECKDATE ASC
EOMInterest.Select.getEOMInterest_Select3 = SELECT AMOUNT,TXNTYPE,CRDR FROM TEMPTRANSACTIONDETAILS WHERE ACCOUNTNO = ? ORDER BY TXNCHECKDATE ASC
EOMInterest.Select.getEOMInterest_Select4 = SELECT AMOUNT FROM TEMPTRANSACTIONDETAILS WHERE TXNCHECKDATE>TO_DATE(?, 'DD-MM-YY') AND TXNCHECKDATE<=TO_DATE(?, 'DD-MM-YY') AND ACCOUNTNO = ? AND CRDR = ?
EOMInterest.Delete.getEOMInterest_Delete = DELETE FROM TEMPTRANSACTIONDETAILS WHERE ACCOUNTNO = ?
EOMInterest.Insert.insertIntoTempTxnDetails = INSERT INTO TEMPTRANSACTIONDETAILS (ACCOUNTNO, EODID,TRANSACTIONID,AMOUNT,TXNTYPE,TXNCHECKDATE,CRDR) VALUES(?,?,?,?,?,TO_DATE(?, 'DD-MM-YY'),?)
EOMInterest.Update.updateDELINQUENTACCOUNTnpdetails = UPDATE DELINQUENTACCOUNT SET NPACCRUEDINTEREST = NPACCRUEDINTEREST + ?, NPACCRUEDOVERLIMITFEES = NPACCRUEDOVERLIMITFEES + ?, NPACCRUEDLATEPAYFEES = NPACCRUEDLATEPAYFEES + ?, NPACCRUEDFEES = NPACCRUEDFEES + ? WHERE ACCOUNTNO = ?
EOMInterest.Insert.insertIntoEomInterest = INSERT INTO EOMINTEREST (CARDNO,FORWARDINTEREST,INTERESTAMOUNT,EODID,ACCOUNTNO,STATUS) VALUES (?,?,?,?,?,?)
EOMInterest.Insert.insertIntoEodGLAccount = INSERT INTO EODGLACCOUNT (EODID,GLDATE,CARDNO,GLTYPE,AMOUNT,CRDR,PAYMENTTYPE) VALUES (?,TO_DATE(?, 'DD-MM-YY'),?,?,to_char(?,'9999999999.99'),?,?)

//EOM Supplementary Card Reset Process
EOMSupplementaryCardReset.Select.getEligibleAccounts = SELECT CA.ACCOUNTNO FROM CARDACCOUNT CA,CARD C WHERE CA.CARDNUMBER=C.CARDNUMBER AND CA.NEXTBILLINGDATE <= TO_DATE( ?, 'DD-MM-YY') AND C.CARDSTATUS NOT IN (?,?)
EOMSupplementaryCardReset.Select.getEligibleAccounts_Appender1 = AND CA.ACCOUNTNO NOT IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS='
EOMSupplementaryCardReset.Select.getEligibleAccounts_Appender2 = AND CA.ACCOUNTNO IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS='
EOMSupplementaryCardReset.Select.getAllTheCardsForAccount = SELECT CA.CARDNUMBER FROM CARDACCOUNTCUSTOMER CA,CARD CD WHERE CA.CARDNUMBER = CD.CARDNUMBER AND CD.CARDSTATUS  NOT IN (?,?) AND CA.ACCOUNTNO  = ? ORDER BY CA.ACCOUNTNO,  CASE WHEN CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? THEN 1 WHEN CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? OR CD.CARDCATEGORYCODE = ? THEN 2 ELSE 3 END, CD.CARDNUMBER
EOMSupplementaryCardReset.Select.getCardBalances = SELECT NVL(EODSTARTINGBAL,0) AS EODSTARTINGBAL ,NVL(EODCLOSINGBAL,0) AS EODCLOSINGBAL ,NVL(FINANCIALCHARGES,0) AS FINANCIALCHARGES ,NVL(CUMCASHADVANCES,0) AS CUMCASHADVANCES ,NVL(CUMTRANSACTIONS,0) AS CUMTRANSACTIONS , (SELECT CREDITLIMIT FROM CARD WHERE CARDNUMBER = ?) AS CREDITLIMIT, (SELECT CASHLIMIT FROM CARD WHERE CARDNUMBER = ?) AS CASHLIMIT FROM EODCARDBALANCE WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Select.UpdateEOMCardBalance_Select = SELECT CUMFINANCIALCHARGE,CUMCASHADVANCE,CUMTRANSACTION FROM EOMCARDBALANCE WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Update.UpdateEOMCardBalance_Update = UPDATE EOMCARDBALANCE SET LASTUPDATEDTIME = TO_DATE(?, 'DD-MM-YY'), LASTUPDATEDUSER=?,CUMFINANCIALCHARGE=?, CUMCASHADVANCE=?, CUMTRANSACTION=?,STATUS=?,EODID=? WHERE CARDNUMBER =?"
EOMSupplementaryCardReset.Insert.UpdateEOMCardBalance_Insert = INSERT INTO EOMCARDBALANCE(CARDNUMBER,MAINCARDNUMBER, CREATEDTIME,LASTUPDATEDTIME,LASTUPDATEDUSER,CUMFINANCIALCHARGE, CUMCASHADVANCE,CUMTRANSACTION,STATUS,ISPRIMARY,EODID) VALUES (?,?,TO_DATE(?,'DD-MM-YY'),TO_DATE(?, 'DD-MM-YY'),?,?,?,?,?,?,?)
EOMSupplementaryCardReset.Select.getCardTempBalances = SELECT TEMPCREDITAMOUNT,TEMPCASHAMOUNT FROM CARD WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Update.resetEodCardBallance = UPDATE EODCARDBALANCE SET EODSTARTINGBAL=(SELECT CREDITLIMIT FROM CARD WHERE CARDNUMBER = ?),EODCLOSINGBAL=(SELECT CREDITLIMIT FROM CARD WHERE CARDNUMBER = ?), LASTUPDATEDTIME= TO_DATE(?, 'DD-MM-YY'),LASTUPDATEDUSER=?,FINANCIALCHARGES=?, CUMCASHADVANCES=?,CUMTRANSACTIONS=? WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Select.getEOMCardBalanceFromSupplementary = SELECT NVL(CUMFINANCIALCHARGE,0) AS CUMFINANCIALCHARGE,NVL(CUMCASHADVANCE,0) AS CUMCASHADVANCE,NVL(CUMTRANSACTION,0) AS CUMTRANSACTION FROM EOMCARDBALANCE WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Update.resetEOMCardBalance = UPDATE EOMCARDBALANCE SET LASTUPDATEDTIME = TO_DATE(?, 'DD-MM-YY'), LASTUPDATEDUSER=?,CUMFINANCIALCHARGE=?,CUMCASHADVANCE=?, CUMTRANSACTION=?,STATUS=?,EODID=? WHERE CARDNUMBER =?
EOMSupplementaryCardReset.Select.calculateMainCardForwardPayments = SELECT FORWARDAMOUNT FROM EODPAYMENT WHERE CARDNUMBER = ? AND STATUS = ?
EOMSupplementaryCardReset.Select.calculateSupCardForwardPayments = SELECT FORWARDAMOUNT FROM EODPAYMENT WHERE CARDNUMBER IN (SELECT CARDNUMBER FROM EODPAYMENT WHERE CARDNUMBER <> MAINCARDNO AND STATUS IN( ?,?) AND MAINCARDNO = ?) AND STATUS IN( ?,?)
EOMSupplementaryCardReset.Update.updateMainCardBal = UPDATE CARD SET OTBCREDIT = OTBCREDIT - ?, OTBCASH = OTBCASH - ?, TEMPCREDITAMOUNT = TEMPCREDITAMOUNT + ?, TEMPCASHAMOUNT = TEMPCASHAMOUNT + ? WHERE CARDNUMBER =?
EOMSupplementaryCardReset.Update.updateMainCardBalOnline = UPDATE ECMS_ONLINE_CARD SET OTBCREDIT = OTBCREDIT - ? ,OTBCASH = OTBCASH - ?, TEMPCREDITAMOUNT = TEMPCREDITAMOUNT + ?, TEMPCASHAMOUNT = TEMPCASHAMOUNT + ? WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Update.updateSupplementaryEODPaymentsStatus = UPDATE EODPAYMENT SET STATUS =?  WHERE CARDNUMBER IN (SELECT CARDNUMBER FROM EODPAYMENT WHERE CARDNUMBER <> MAINCARDNO AND STATUS IN(?,?) AND MAINCARDNO = ?) AND STATUS IN(?,?)
EOMSupplementaryCardReset.Select.insertNewEntryToEodPayment_Select = SELECT NVL(MAX(SEQUENCENUMBER),0) AS  SEQUENCENUMBER FROM EODPAYMENT WHERE CARDNUMBER=? AND EODID=?
EOMSupplementaryCardReset.Insert.insertNewEntryToEodPayment_Insert = INSERT INTO EODPAYMENT(SEQUENCENUMBER,EODID,CARDNUMBER,MAINCARDNO,ISPRIMARY,AMOUNT,PAYMENTTYPE,TRACEID,FORWARDAMOUNT,STATUS,CREATEDTIME,LASTUPDATEDUSER,LASTUPDATEDDATE) VALUES(?,?,?,?,?,?,?,?,?,?,SYSDATE,?,SYSDATE)
EOMSupplementaryCardReset.Update.updateEodCardBallance = UPDATE EODCARDBALANCE SET EODSTARTINGBAL=?,EODCLOSINGBAL= ?, LASTUPDATEDTIME= TO_DATE(?, 'DD-MM-YY'),LASTUPDATEDUSER=?,FINANCIALCHARGES=?, CUMCASHADVANCES=?,CUMTRANSACTIONS=? WHERE CARDNUMBER = ?
EOMSupplementaryCardReset.Select.calculateOTBsAfterResetting = SELECT AMOUNT,INCREMENTTYPE,INCORDEC FROM TEMPLIMITINCREMENT WHERE CARDNO =? AND STATUS = ?
EOMSupplementaryCardReset.Update.resetSuplimentryBalanceInBackendCardTable = UPDATE CARD SET OTBCREDIT=?,OTBCASH=?,TEMPCREDITAMOUNT=?,TEMPCASHAMOUNT=? WHERE CARDNUMBER=?
EOMSupplementaryCardReset.Update.resetSuplimentryBalanceInOnlineCardTable = UPDATE ECMS_ONLINE_CARD SET OTBCREDIT=?,OTBCASH=?,TEMPCREDITAMOUNT=?,TEMPCASHAMOUNT=? WHERE CARDNUMBER=?
EOMSupplementaryCardReset.Update.updatePreviousEODErrorCardDetails = UPDATE EODERRORCARDS SET STATUS = ? WHERE EODID = ? AND PROCESSSTEPID < ?
EOMSupplementaryCardReset.Update.updateEodProcessSummery = UPDATE EODPROCESSSUMMERY SET ENDTIME = SYSDATE , STATUS = ?,LASTUPDATEDTIME = SYSDATE,LASTUPDATEDUSER = ? WHERE EODID = ? AND PROCESSID = ?
EOMSupplementaryCardReset.Select.getCreditCashLimit = SELECT CREDITLIMIT, CASHLIMIT FROM CARD WHERE CARDNUMBER=?

//Fee Post Process
FeePost.Select.getInitEodFeePostCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM EODCARDFEE F FULL JOIN EOMINTEREST EI ON EI.CARDNO = F.CARDNUMBER INNER JOIN CARD C ON C.CARDNUMBER = F.CARDNUMBER OR C.CARDNUMBER = EI.CARDNO INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO OR CAC.CARDNUMBER = EI.CARDNO WHERE ((F.STATUS IN (?, ?) AND F.EFFECTDATE <= ?) OR EI.STATUS IN (?)) AND CAC.ACCOUNTNO NOT IN (SELECT EC.ACCOUNTNO FROM EODERRORCARDS EC WHERE EC.STATUS= ?)
FeePost.Select.getErrorEodFeePostCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM EODCARDFEE F FULL JOIN EOMINTEREST EI ON EI.CARDNO = F.CARDNUMBER INNER JOIN CARD C ON C.CARDNUMBER = F.CARDNUMBER OR C.CARDNUMBER = EI.CARDNO INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO OR CAC.CARDNUMBER = EI.CARDNO INNER JOIN EODERRORCARDS EEC ON EEC.ACCOUNTNO = CAC.ACCOUNTNO WHERE ((F.STATUS IN (?, ?) AND F.EFFECTDATE <= ?) OR EI.STATUS IN (?) ) AND EEC.STATUS = ? AND EEC.EODID < ?  AND EEC.PROCESSSTEPID <= ? ORDER BY CAC.CUSTOMERID, CAC.ACCOUNTNO
FeePost.Select.getFeeAmount = SELECT NVL(FEE.CARDNUMBER, INTE.CARDNO) CARDNUMBER,(NVL(FEE.FEEAMOUNT,0) + NVL(INTE.FORWARDINTEREST, 0)) FINANCIALCHARGES FROM (SELECT F.CARDNUMBER, NVL(SUM(F.FEEAMOUNT),0) FEEAMOUNT FROM EODCARDFEE F WHERE F.STATUS IN (?, ?) AND F.EFFECTDATE <= ? AND F.ACCOUNTNO = ? GROUP BY F.CARDNUMBER ) FEE FULL JOIN (SELECT EI.CARDNO, NVL(SUM(EI.FORWARDINTEREST),0) FORWARDINTEREST FROM EOMINTEREST EI WHERE EI.STATUS IN (?) AND EI.ACCOUNTNO = ? GROUP BY EI.CARDNO) INTE ON FEE.CARDNUMBER = INTE.CARDNO

